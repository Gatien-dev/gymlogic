@model Gymlogic.Models.Data.Abonnement
@using IdentitySample.Models;



@{
    ViewBag.Title = "Details";
    var approver = (ApplicationUser)ViewBag.approver;
    var db = new ApplicationDbContext();
    var agent = db.Users.Find(Model.UserID);
}


<div class="col-md-4 col-md-offset-2">
    <h4 class="box-title text-bold">Informations générales d'abonnement</h4>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayName("Client")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Client.Nom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Forfait.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Forfait.Description)
        </dd>

        <dt>
            @Html.DisplayName("Agent de saisie")
        </dt>

        <dd>
            @Html.DisplayFor(model => agent.Nom) @Html.DisplayFor(model => agent.Prenoms)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Montant)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Montant)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateCreation)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateCreation)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateDebut)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateDebut)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NbJours)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NbJours)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NbJoursRestants)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NbJoursRestants)
        </dd>

        <dt>
            Montant payé
        </dt>

        <dd>
            @(Model.Montant-Model.ResteAPayer)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ResteAPayer)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ResteAPayer)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Suspendu)
        </dt>

        <dd>
            @if (Model.Suspendu)
        {
            @("Oui")
    }
    else
    {
        @("Non")
}
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Approved)
        </dt>

        <dd>
            @if (Model.Approved)
        {
            @("Oui")
    }
    else
    {
        @("Non")
}
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Renewal)
        </dt>

        <dd>
            @if (Model.Renewal)
        {
            @("Oui")
    }
    else
    {
        @("Non")
}
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.DateRenouvellement)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateRenouvellement)
        </dd>*@

        <dt>
            @Html.Label("Validé par: ")
        </dt>

        <dd>
            @Html.DisplayFor(model => approver.Nom)
            @Html.DisplayFor(model => approver.Prenoms)
        </dd>

    </dl>
</div>
<div class="col-md-6">
    <h4 class="box-title text-bold">Abonnements en cours pour ce client</h4>
    @if (Model.Client.Abonnements.Any())
    {
        foreach (var abonnement in Model.Client.Abonnements)
        {
            <p>Abonnement @(abonnement.Suspendu ? "Suspendu" : "En cours") a @abonnement.Forfait.Discipline.Name : @abonnement.NbJoursRestants jours restants sur @abonnement.NbJours</p>
        }
    }
    else
    {
        <small class="info"> <span class="text-danger">Aucun abonnement</span> enregistré au nom de ce client.</small>

    }
</div>
<div class="col-md-12 text-center">

    <a class="btn btn-primary @if (!Model.Activé) { @("disabled")} " href="@Url.Action("Edit", new { id = Model.ID })" @if (!Model.Activé) { @("disabled=disabled")}><span class="fa fa-edit "  > </span> Modifier</a>
    @if (!Model.Approved)
    {
        <a class="btn btn-success" href="@Url.Action("Valider", new { id = Model.ID })"><span class="fa fa-check"> </span> Valider</a>

    }
    @if (Model.Suspendu)
    {
        <a class="btn btn-success" href="@Url.Action("Resume", new { id = Model.ID })" @if (!Model.Activé) { @("disabled=disabled")}><span class="fa fa-play"> </span> Reprendre</a>
    }
    else
    {
<a class="btn btn-warning @if (!Model.Activé) { @("disabled")}" href="@Url.Action("Suspendre", new { id = Model.ID })" @if (!Model.Activé) { @("disabled=disabled") }><span class="fa fa-pause"> </span> Arrêter</a>
    }
    @if (!Model.Activé)
    {
        <a class="btn btn-success" href="@Url.Action("Activer", new { id = Model.ID })"><span class="fa fa-play"> </span> Activer</a>
    }
    @if (Model.ResteAPayer>0)
    {
        <a class="btn btn-success" href="@Url.Action("Payer", new { id = Model.ID })"><span class="fa fa-money"> </span> Payer</a>
    }
    <a class="btn btn-success" href="@Url.Action("index","History", new { abonnementId = Model.ID })"><span class="fa fa-history"> </span> Historique</a>
    <a class="btn btn-primary @if (!Model.Activé) { @("disabled")}" href="@Url.Action("Renouveler", new { id = Model.ID })"><span class="fa fa-recycle"> </span> Renouveler</a>
    <a class="btn btn-default" href="@Url.Action("Index")"><span class="fa fa-arrow-circle-left"> </span> Retour</a>
</div>
